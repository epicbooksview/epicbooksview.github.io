{"version":3,"file":"static/js/588.8fb6cc52.chunk.js","mappings":"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","sources":["paperbase/LoadingInline.js","paperbase/SignIn.js"],"sourcesContent":["import { CircularProgress, Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport default function LoadingInline() {\r\n    return (<React.Fragment>\r\n            <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n        >\r\n        <Grid item >\r\n            <br />\r\n            <CircularProgress />\r\n            <br />\r\n        </Grid>\r\n        </Grid>\r\n    </React.Fragment>);\r\n}","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Alert } from '@mui/material';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport AppContext from '../appContect';\r\nimport { getAuth, RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport LoadingInline from './LoadingInline';\r\nimport FirebaseContext from '../firebaseContext';\r\nimport {useLocation} from \"react-router-dom\";\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" >\r\n      ePicBooks by MSRK\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"80%\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function SignIn(props) {\r\n  const locLink = useLocation();\r\n  const queryParams = new URLSearchParams(locLink.search);\r\n  React.useEffect(()=>{\r\n    console.log(\"ReCaptcha Rendered\");\r\n    let auth = getAuth();\r\n    window.recaptchaVerifier = new RecaptchaVerifier('phone', {\r\n      'size': 'invisible',\r\n      'callback': (response) => {\r\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n      }\r\n    }, auth);\r\n  },[]);\r\n  const fbCtxt = React.useContext(FirebaseContext);\r\n  const [authMail, setAuthMail] = React.useState(\"\");\r\n  const actionCodeSettings = {\r\n    // Your redirect URL\r\n    // url: 'https://localhost:3000/', \r\n    url: 'http://sivrak.github.io/', \r\n    handleCodeInApp: true,\r\n  };\r\n  async function sendOTP(phone) {\r\n    console.log(\"OTP Attempted\");\r\n    setAuthMail(\"\");\r\n    try {\r\n      // window.localStorage.setItem('emailForSignIn', \"\");\r\n      let auth = getAuth();\r\n      // await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      // window.localStorage.setItem('emailForSignIn', email);\r\n\r\n      signInWithPhoneNumber(auth, '+91'+phone, window.recaptchaVerifier)\r\n      .then((confirmationResult) => {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        window.confirmationResult = confirmationResult;\r\n        console.log(confirmationResult);\r\n        setAuthMail(\"pass\");\r\n        handleOpen();\r\n        setLoading(false);\r\n        // ...\r\n      }).catch((error) => {\r\n        // Error; SMS not sent\r\n        // ...\r\n        console.log(error);\r\n        setAuthMail(error.toString());\r\n        setLoading(false);\r\n      });\r\n\r\n    } catch (err) {\r\n      // this.errorMessage = err.message;\r\n      console.log(err.message);\r\n      setAuthMail(err.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  const ctx = React.useContext(AppContext);\r\n  const navigate = useNavigate();\r\n  // const handleSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n  //   setAuthMail(\"\");\r\n  //   const data = new FormData(event.currentTarget);\r\n  //   console.log({\r\n  //     phone: data.get('phone')\r\n  //   });\r\n  //   let phone = data.get('phone');\r\n  //   ctx.phone = phone;\r\n  //   // await sendEmailLink(phone);\r\n  //   await sendOTP(phone);\r\n  // };\r\n  \r\n  const [phoneNum, setPhone] = React.useState(\"\");\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [ isVerifying, setVerifying ] = React.useState(false);\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    setAuthMail(\"\");\r\n    let phone = phoneNum;\r\n    ctx.phone = phone;\r\n    // await sendEmailLink(phone);\r\n    await sendOTP(phone);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  let otpValue = 0;\r\n  setTimeout(()=>{\r\n    if(window.localStorage.getItem(\"loginPhone\")){\r\n      navigate(\"/home\");\r\n    }\r\n  },500);\r\n  function otpVerify(){\r\n    setVerifying(true);\r\n    console.log(otpValue);\r\n    window.confirmationResult.confirm(otpValue).then((result) => {\r\n      // User signed in successfully.\r\n      const user = result.user;\r\n      console.log(\"user\",user);\r\n      window.localStorage.setItem('loginPhone',ctx.phone)\r\n      fbCtxt.setLoading(true);\r\n      setVerifying(false);\r\n      fbCtxt.fetchAlbum();\r\n      navigate(\"/home\");\r\n      // ...\r\n    }).catch((error) => {\r\n      // User couldn't sign in (bad verification code?)\r\n      // ...\r\n      console.log(\"User couldn't sign in (bad verification code?)\",error);\r\n      alert(\"Try again, OTP failed.\");\r\n      setVerifying(false);\r\n    });\r\n    \r\n  }\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: \"40%\",\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{textAlign:\"center\"}}>\r\n            {(queryParams.get(\"studio\")?\r\n                queryParams.get(\"studio\")?.charAt(0)?.toUpperCase()+queryParams.get(\"studio\")?.slice(1)\r\n                :\"Login\")}\r\n          </Typography>\r\n          <Box  noValidate sx={{ mt: 1 }}>\r\n            \r\n          \r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"phone\"\r\n              label=\"Phone Number\"\r\n              name=\"phone\"\r\n              type=\"number\"\r\n              autoComplete=\"phone\"\r\n              value={phoneNum}\r\n              onChange={(e)=>{setPhone(e.target.value);}}\r\n              autoFocus\r\n            />\r\n            {/* <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            /> */}\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            {isLoading ? <LoadingInline/>:<Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              id=\"sign-in-button\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Next\r\n            </Button>}\r\n            <Modal\r\n              aria-labelledby=\"transition-modal-title\"\r\n              aria-describedby=\"transition-modal-description\"\r\n              open={open}\r\n              // onClose={handleClose}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}\r\n            >\r\n              <Fade in={open}>\r\n                <Box sx={style}>\r\n                  {/* <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    OTP Sent Successfully.\r\n                  </Typography> */}\r\n                  \r\n                  <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"center\"\r\n                  >\r\n                      <Grid item >\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/673/673069.png' width=\"50px\"></img>\r\n                      </Grid>\r\n                  </Grid>\r\n                  <Alert severity=\"success\" style={{fontSize:\"16px\"}}>\r\n                    Enter OTP received by {ctx.phone}.\r\n                  </Alert>\r\n                  \r\n                  <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"otp\"\r\n                  label=\"OTP\"\r\n                  name=\"otp\"\r\n                  type=\"number\"\r\n                  onChange={(v)=>{otpValue = v.target.valueAsNumber}}\r\n                  autoFocus\r\n                />\r\n                {isVerifying ? <LoadingInline/>:<Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 2, mb: 2 }}\r\n                  onClick={otpVerify}\r\n                >\r\n                  Verify\r\n                </Button>}\r\n                \r\n            {/* <Grid container>\r\n              <Grid item xs>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Resend OTP\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link> */}\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            {(authMail===\"pass\")?\r\n            <Alert severity=\"success\">Success, wait while we load!</Alert>:\r\n            (authMail!==\"\")?\r\n            <Alert severity=\"error\">{authMail.replace(\"Firebase:\",\"\")}</Alert>:\r\n            \"\"}\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}"],"names":["LoadingInline","Grid","container","direction","justifyContent","alignItems","width","item","CircularProgress","Copyright","props","Typography","variant","color","align","Link","Date","getFullYear","theme","createTheme","style","position","top","left","transform","bgcolor","border","boxShadow","p","SignIn","locLink","useLocation","queryParams","URLSearchParams","search","React","console","log","auth","getAuth","window","recaptchaVerifier","RecaptchaVerifier","response","fbCtxt","FirebaseContext","authMail","setAuthMail","sendOTP","phone","signInWithPhoneNumber","then","confirmationResult","handleOpen","setLoading","catch","error","toString","err","message","ctx","AppContext","navigate","useNavigate","phoneNum","setPhone","isLoading","isVerifying","setVerifying","handleSubmit","open","setOpen","otpValue","setTimeout","localStorage","getItem","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","Avatar","m","LockOutlined","textAlign","get","charAt","toUpperCase","slice","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","type","autoComplete","value","onChange","e","target","autoFocus","FormControlLabel","control","Checkbox","Button","mb","onClick","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","src","Alert","severity","fontSize","v","valueAsNumber","confirm","result","user","setItem","fetchAlbum","alert","xs","href","replace"],"sourceRoot":""}